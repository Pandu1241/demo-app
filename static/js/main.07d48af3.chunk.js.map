{"version":3,"sources":["logo.svg","Chart.js","Chartdata.js","App.js","reportWebVitals.js","index.js"],"names":["Chartsample","props","height","data","options","title","display","text","fontSize","legend","position","scales","xAxes","barPercentage","yAxes","ticks","beginAtZero","plugins","datalabels","color","align","anchor","EmpHoursJson","EmpName","WeeklyHours","App","useState","HoursData","SetHoursData","AgentsList","SetAgentsList","SelectedAgent","SetSelectedAgent","NoOffWeeks","SetNoOffWeeks","getRandomColor","i","Math","floor","random","useEffect","agentNames","map","item","index","push","SetAgentHours","agentName","noOffWeeks","empTempData","labels","label","backgroundColor","slice","datasets","className","style","marginLeft","class","for","event","target","value","AgentChange","marginRight","NoOfWeeksChange","margin","Chart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07d48af3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport { useEffect, useState } from 'react';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\nconst Chartsample = (props) => {\r\n      return (\r\n        <div>\r\n          <Bar\r\n          height={100}\r\n            data={props.data}\r\n            options={{\r\n              title:{\r\n                display:false,\r\n                text:'Issue Assigns Weekly Trend',\r\n                fontSize:20 \r\n              },\r\n              legend:{\r\n                display:true,\r\n                position:'bottom'\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                    barPercentage: 0.6\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }]\r\n            },\r\n            plugins: {\r\n                datalabels: {\r\n                   display: true,\r\n                   color: 'black',\r\n                   align :'end',\r\n                   anchor:'end'\r\n                }\r\n             }\r\n           \r\n            }}\r\n\r\n            \r\n          />\r\n        </div>\r\n      );\r\n  }\r\n  \r\nexport default Chartsample;\r\n","\r\n  export const EmpHoursJson = [\r\n      {\r\n          EmpName: 'Amit',\r\n          WeeklyHours:[40,38,32,28,0,40]\r\n      },\r\n      {\r\n        EmpName: 'Arshitha',\r\n        WeeklyHours:[40,38,40,28,30,38]\r\n      },\r\n      {\r\n        EmpName: 'Balaji',\r\n        WeeklyHours:[32,38,32,28,40,38]\r\n      },\r\n      {\r\n        EmpName: 'Bhavana',\r\n        WeeklyHours:[42,32,28,40,38,40]\r\n      },\r\n      {\r\n        EmpName: 'Jaheer',\r\n        WeeklyHours:[38,32,28,40,38,40]\r\n      },\r\n      {\r\n        EmpName: 'Jithendra',\r\n        WeeklyHours:[40,38,32,28,40,38]\r\n      },\r\n      {\r\n        EmpName: 'Mukesh',\r\n        WeeklyHours:[32,40,38,40,40,38]\r\n      },\r\n      {\r\n        EmpName: 'Noor',\r\n        WeeklyHours:[42,38,32,40,38,28]\r\n      },\r\n      {\r\n        EmpName: 'Pandu',\r\n        WeeklyHours:[40,38,38,32,40,38]\r\n      },\r\n      {\r\n        EmpName: 'Raju',\r\n        WeeklyHours:[22,42,40,28,38,38]\r\n      },\r\n      {\r\n        EmpName: 'Ranga',\r\n        WeeklyHours:[32,38,28,40,38,40]\r\n      },\r\n      {\r\n        EmpName: 'Sampath',\r\n        WeeklyHours:[34,38,34,40,40,38]\r\n      },\r\n      {\r\n        EmpName: 'Sreekanth',\r\n        WeeklyHours:[40,28,42,36,40,38]\r\n      }\r\n  ]\r\n\r\n  export const ColorsList = [\"Blue\", \"Green\", \"Red\", \"Orange\", \"Violet\", \"Indigo\", \"Yellow\"];\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Chartsample from './Chart';\nimport {EmpHoursJson,ColorsList} from './Chartdata';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const[HoursData, SetHoursData]=useState(null)\n  const[AgentsList, SetAgentsList]=useState([])\n  const[SelectedAgent, SetSelectedAgent]=useState('All')\n\n  const[NoOffWeeks, SetNoOffWeeks]=useState(4) \n\n  function getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  useEffect(()=>{\n    let agentNames=[];\n    EmpHoursJson.map((item, index) => {\n      agentNames.push(item.EmpName)\n  });  \n    SetAgentsList(agentNames);\n    SetAgentHours('All',NoOffWeeks);\n  },[])\n\n  const AgentChange =(event)=>{\n    SetSelectedAgent(event.target.value);\n    SetAgentHours(event.target.value,NoOffWeeks);\n  }\n\n  const NoOfWeeksChange =(event)=>{\n    SetNoOffWeeks(event.target.value);\n    SetAgentHours(SelectedAgent,event.target.value)\n    \n    \n  }\n\n  const SetAgentHours=(agentName, noOffWeeks)=>{\n    let empTempData=[];\n    let labels=[]; \n    for (var i = 1; i <= noOffWeeks; i++) {\n      labels.push(\"Week \"+i)\n    } \n      EmpHoursJson.map((item, index) => { \n        if(item.EmpName == agentName || agentName == 'All'){        \n            empTempData.push({\n            label: item.EmpName,\n            backgroundColor: getRandomColor(),  \n            data: item.WeeklyHours.slice(0, noOffWeeks)\n       })\n      }\n    });\n    SetHoursData({\n      datasets : empTempData,\n      labels:labels\n    });\n  }\n\n  return (\n    <div>\n      <div className='row'>\n        <div className='col-md-6'>\n          <h3 style={{marginLeft:30}}>Issue Assigns Weekly Trend</h3> \n        </div>\n        <div className='col-md-3'>\n            <div class=\"form-group\">\n            <label for=\"sel1\">Agent:</label>\n            <select class=\"\" class=\"form-control\" onChange={(event) => AgentChange(event)}>\n              <option value='All'>All</option>    \n              {\n                AgentsList.map((item, index)=>\n                <option value={item} key={index}>{item}</option>\n                )\n              }\n            </select>\n          </div>\n        </div>\n        <div className='col-md-3'>\n        <div class=\"form-group\" style={{marginRight:10}}>\n            <label for=\"sel1\">No Of Weeks:</label>\n            <select class=\"\" class=\"form-control\" value={NoOffWeeks} onChange={(event) => NoOfWeeksChange(event)}>\n              <option value='1'>1</option>    \n              <option value='2'>2</option>  \n              <option value='3'>3</option>  \n              <option value='4'>4</option>  \n              <option value='5'>5</option>  \n              <option value='6'>6</option> \n            </select>\n          </div>\n        </div>\n      </div>\n      \n      <hr></hr>\n      <div  style={{margin:30}}>\n        {\n          HoursData != null && <Chartsample data={HoursData} />\n        }          \n      </div>\n    </div>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}